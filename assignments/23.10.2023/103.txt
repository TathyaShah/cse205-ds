class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans=new ArrayList<>();
        Queue<TreeNode> q=new LinkedList<>();
        if(root==null){
            return ans;
        }
        q.add(root);
        boolean rev=false;
        while(!q.isEmpty()){
            int level=q.size();
            List<Integer> temp=new ArrayList<>();
            for(int i=0;i<level;i++){
                if(root!=null){
                    TreeNode node=q.remove();
                    if(rev){
                        temp.add(0,node.val);
                    }
                    else{
                        temp.add(node.val);
                    }
                    if(node.left!=null){
                        q.add(node.left);
                    }
                    if(node.right!=null){
                        q.add(node.right);
                    }
                }
                else{
                    q.add(q.remove());
                }
            }
            ans.add(temp);
            rev=!rev;
        }
        return ans;
    }
}